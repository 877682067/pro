<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:p="http://www.springframework.org/schema/p"
    xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       	http://www.springframework.org/schema/tx
       	http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
       	http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-4.0.xsd">
    <mvc:annotation-driven />
    <!-- ①：对web包中的所有类进行扫描，以完成Bean创建和自动依赖注入的功能 -->
    <context:component-scan base-package="com.jnl" />

    <!-- 这两个类用来启动基于Spring MVC的注解功能，将控制器与方法映射加入到容器中 -->
    <beans:bean
        class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />
    <beans:bean
        class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />

	<beans:bean id="propertiesConfigure" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<beans:property name="locations">
			<beans:list>
				<beans:value>
					classpath:properties/jdbc.properties
				</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>

	<beans:bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
	
		<beans:property name="driverClassName" value="${jdbc.driverClassName}" />
		<beans:property name="url" value="${jdbc.url}" />
		<beans:property name="username" value="${jdbc.username}" />
		<beans:property name="password" value="${jdbc.password}" />
		<!-- 配置初始化大小、最小、最大 -->
		<beans:property name="initialSize" value="1" />
		<beans:property name="minIdle" value="1" />
		<beans:property name="maxActive" value="10" />
		<!-- 配置获取连接等待超时的时间 -->
		<beans:property name="maxWait" value="10000" />
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 --> 
		<beans:property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 --> 
		<beans:property name="minEvictableIdleTimeMillis" value="300000" />
		<beans:property name="testWhileIdle" value="true" />
		<!-- 这里建议配置为TRUE，防止取到的连接不可用 --> 
		<beans:property name="testOnBorrow" value="true" /> 
		<beans:property name="testOnReturn" value="false" />
		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 --> 
		<beans:property name="poolPreparedStatements" value="true" /> 
		<beans:property name="maxPoolPreparedStatementPerConnectionSize" 
		 value="20" />
		<!-- 这里配置提交方式，默认就是TRUE，可以不用配置 -->
		<beans:property name="defaultAutoCommit" value="true" />
		<!-- 验证连接有效与否的SQL，不同的数据配置不同 --> 
		<beans:property name="validationQuery" value="select 1 " /> 
		<beans:property name="filters" value="stat" /> 
<!-- 		<beans:property name="proxyFilters"> 
			<beans:list> 
				<beans:ref bean="logFilter" /> 
			</beans:list> 
		</beans:property> -->
		
	</beans:bean>
	
<!-- 	<beans:bean id="logFilter" class="com.alibaba.druid.filter.logging.Slf4jLogFilter"> 
		<beans:property name="" value="false" /> 
	</beans:bean> -->
	<!-- sqlsession -->
	<beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="configLocation" value="classpath:myibatis-config.xml"></beans:property>  
	</beans:bean>
	<!-- 事务管理 -->
	<beans:bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:property name="dataSource" ref="dataSource"></beans:property>
	</beans:bean>
	<tx:advice id="advice" transaction-manager="transactionManager"> 
	    <tx:attributes>  
	        <tx:method name="update*" propagation="REQUIRED" read-only="false" rollback-for="java.lang.Exception"/>  
	        <tx:method name="insert" propagation="REQUIRED" read-only="false"/>  
	    </tx:attributes>  
	</tx:advice>    
	<aop:config>  
	    <aop:pointcut id="interceptorPointCuts" expression="execution (* com.jnl.pro.web.*.service.*(..))"/>  
	    <aop:advisor advice-ref="advice" pointcut-ref="interceptorPointCuts"/>  
	</aop:config>
    <!-- 这个类用于Spring MVC视图解析 -->
    <beans:bean id="viewResolver"
        class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <beans:property name="prefix" value="/WEB-INF/pages/" />
        <beans:property name="suffix" value=".jsp" />
    </beans:bean>
	<beans:bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<beans:property name="basePackage" value="com.jnl.pro.web.*.mapper"/>
	</beans:bean>
</beans:beans>